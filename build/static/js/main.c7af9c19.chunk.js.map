{"version":3,"sources":["svgs/heart.svg","svgs/pill.svg","colors.js","components/Player.js","services/gamepad.js","components/Enemy.js","helpers.js","components/EnemyShooter.js","components/EnemyStation.js","components/EnemyDubber.js","components/Item.js","components/Door.js","roomGenerator.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","COLOR_PLAYER","COLOR_DOORS","COLOR_ITEM_LIFE","COLOR_ITEM_FATPILL","COLOR_ITEM_BIGSHOT","COLOR_ENEMY_SHOOTER","COLOR_ENEMY_STATION","COLOR_ENEMY_DUBBER","sound_fire","Howl","src","Player","_ref","_ref2","engine","x","y","Object","classCallCheck","this","state","radius","color","body","Bodies","circle","label","render","fillStyle","lifes","effects","ultimate","ts","shot","Date","ulti","direction","speed","arguments","length","undefined","fatpill","Body","setVelocity","params","_this","timestamp","id","recentColor","scale","setTimeout","deactivateEffect","_this2","console","log","keys","filter","k","forEach","_this3","bulletRadius","bigshot","margin","bullet","position","static","frictionAir","World","add","world","Composite","remove","fireSpeed","play","fireBulletToDirection","gamepad","gamepads","navigator","getGamepads","toConsumableArray","d","connected","gp","buttons","map","i","index","pressed","value","axes","Enemy","onDeath","counter","dead","to","timeout","fireBulletToPosition","isNaN","Error","dx","dy","distance","Math","sqrt","pow","width","_from","player","players","random","min","max","ceil","floor","EnemyShooter","possibleConstructorReturn","getPrototypeOf","apply","lastMove","lastShot","focusPlayer","fireBulletToBody","moveToBody","moveToDirection","EnemyStation","isStatic","lastShot1","lastShot2","fireBulletStar","height","rectangle","randoms","directionIndex","directionPathsIndex","directionPaths","directions","get","prototype","call","setAngularVelocity","intervalLShot1","fireBulletRectangle","timing","timeScale","Item","type","settings","life","itemType","chamfer","Door","targetRoom","_right$left$top$botto","right","options","left","top","bottom","doorType","locked","generateRooms","_x","_generateRooms","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","0","enemies","items","doors","1","2","EnemyDubber","3","stop","sound_drink_1","sound_drink_2","sound_door","sound_bg","loop","sound_start","sound_dead","sound_victory_1","sound_victory_2","sound_hit","Game","props","gameover","rooms","currentRoomId","renderElement","react_default","createElement","style","clear","opts","room","c","addToWorld","setPosition","playerPosition","unlock","getState","setState","gamepadConnected","gamepadStr","JSON","stringify","start","loading","update","gamepadPlayer","activateEffect","lastUlti","abs","fire","Events","on","event","pairs","pair","bodyA","b","bodyB","die","splice","includes","door","cleanRoom","setupRoom","item","parent","Engine","create","gravity","run","renderer","Render","element","wireframes","background","window","requestAnimationFrame","bind","push","setupCollisions","_this4","num","arr","range","l","round","textAlign","ref","node","Component","App","src_Game","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7af9c19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.0532cfb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/pill.29c71f60.svg\";","export const COLOR_BG = '#131313'\nexport const COLOR_WALLS = '#1b1b1b'\nexport const COLOR_PLAYER = '#ff0040'\n\nexport const COLOR_DOORS = '#272727'\nexport const COLOR_DOORS_UNLOCKED = '#3d3d3d'\n\nexport const COLOR_PLAYER_ULTIMATE_BODY = '#f68187'\nexport const COLOR_PLAYER_ULTIMATE_BULLET = '#f5555d'\nexport const COLOR_PLAYER_FATPILL = '#7a09fa'\n\nexport const COLOR_ITEM_LIFE = '#c42430'\nexport const COLOR_ITEM_FATPILL = '#7a09fa'\nexport const COLOR_ITEM_BIGSHOT = '#5ac54f'\n\nexport const COLOR_ENEMY_SHOOTER = '#94fdff'\nexport const COLOR_ENEMY_STATION = '#e07438'\nexport const COLOR_ENEMY_DUBBER = '#FFF'\n","import { \n  World,\n  Bodies,\n  Composite,\n  Body\n} from 'matter-js';\n\nimport { \n  COLOR_PLAYER,\n  COLOR_PLAYER_ULTIMATE_BODY,\n  COLOR_PLAYER_ULTIMATE_BULLET,\n  COLOR_PLAYER_FATPILL,\n} from '../colors'\n\nimport { Howl } from 'howler';\n\nvar sound_fire = new Howl({ src: ['./sounds/bow.wav'] });\n\nexport default class Player {\n  constructor({ engine }, { x, y }) {\n  \n    this.state = {};\n    this.engine = engine;\n\n    this.radius = 20;\n    this.color = COLOR_PLAYER;\n\n    this.body = Bodies.circle(x, y, this.radius, { \n      label: 'player', \n      render: { fillStyle: this.color },\n      lifes: 3\n    });\n\n    this.effects = {\n      ultimate: false\n    }\n\n    this.ts = {\n       shot: +new Date(),\n       ultimate: +new Date()\n    }\n    this.ulti = false;\n  }\n\n  moveToDirection(direction, speed = 2) {\n    speed = this.effects.fatpill ? 4 : speed;\n\n    Body.setVelocity(this.body, {\n      x: direction.x * speed,\n      y: direction.y * speed,\n    })\n  }\n\n  activateEffect(params) {\n    let timestamp = +new Date();\n\n    if(params.id === 'bigshot') {\n      this.effects[params.id] = true;\n      this.ts[params.id] = +new Date();\n    }\n\n    if(params.id === 'ultimate' && timestamp - this.ts[params.id] > 10000) {\n      this.recentColor = this.body.render.fillStyle;\n      this.body.render.fillStyle = COLOR_PLAYER_ULTIMATE_BODY;\n      Body.scale(this.body, 0.5, 0.5)\n      this.effects[params.id] = true;\n      this.ts[params.id] = +new Date();\n      setTimeout(() => this.deactivateEffect(params), 1000)\n    }\n    if(params.id === 'fatpill') {\n      this.recentColor = this.body.render.fillStyle;\n      this.body.render.fillStyle = COLOR_PLAYER_FATPILL;\n      this.effects[params.id] = true;\n      this.ts[params.id] = +new Date();\n      // setTimeout(() => this.deactivateEffect(params), 30000)\n    }\n  }\n\n  deactivateEffect(params) {\n    this.effects[params.id] = false;\n\n    if(params.id === 'ultimate') {\n      this.body.render.fillStyle = this.color;\n      Body.scale(this.body, 2, 2)\n    }\n    if(params.id === 'fatpill') {\n      this.body.render.fillStyle = this.color;\n    }\n  }\n\n  deactivateEffects() {\n    console.log(Object.keys(this.effects).filter(k => !!this.effects[k]))\n    Object.keys(this.effects)\n      .filter(k => !!this.effects[k])\n      .forEach(k => this.deactivateEffect({ id: k }))\n  }\n\n  fireBulletToDirection(direction, speed = 3.5) {\n    let bulletRadius = this.effects.bigshot ? 10 : 5;\n    let margin = this.radius + bulletRadius;\n    let bullet = Bodies.circle(\n      this.body.position.x + (margin * direction.x), \n      this.body.position.y + (margin * direction.y), \n      bulletRadius, \n      {\n        label: 'bullet-player',\n        static: true\n      }\n    );\n    bullet.frictionAir = 0;\n\n    if(this.effects.ultimate) bullet.render.fillStyle = COLOR_PLAYER_ULTIMATE_BULLET;\n\n    Body.setVelocity(bullet, { x: direction.x * speed, y: direction.y * speed });\n    World.add(this.engine.world, [bullet]);\n    setTimeout(() => Composite.remove(this.engine.world, bullet), 2000)\n  }\n\n  fire(direction) {\n    let timestamp = +new Date();\n    let fireSpeed = (this.effects.ultimate ? 10 : 300);\n\n    if((timestamp - this.ts.shot) > fireSpeed) {\n      sound_fire.play();\n      this.fireBulletToDirection(direction)\n      this.ts.shot = +new Date();\n    }\n  }\n\n  update() {\n  }\n\n  addToWorld() {\n    World.add(this.engine.world, [this.body]);    \n  }\n\n  removeFromWorld() {\n    Composite.remove(this.engine.world, this.body);\n  }\n}\n","class Gamepad {\n  getState() {\n    let gamepads = navigator.getGamepads();\n\n    if([...gamepads].filter(d => d !== null).length < 1) {\n      return {\n        connected: false\n      }\n    }\n\n    let gp = gamepads[0];\n\n    return {\n      connected: true,\n      buttons: gp.buttons.map((d, i) => { \n        return { \n          index: i,\n          pressed: d.pressed,\n          value: d.value\n        }\n      }),\n      axes: gp.axes\n    };\n  }\n}\n\nexport default new Gamepad();","import { \n  World,\n  Bodies,\n  Composite,\n  Body\n} from 'matter-js';\n\nexport default class Enemy {\n  constructor({ engine, render }, { onDeath }) {\n    this.engine = engine;\n    this.render = render;\n\n    this.counter = 0;\n    this.dead = false;\n\n    this.onDeath = onDeath;\n  }\n\n  fireBulletToBody(to, speed = 3.5, timeout = 1000) {\n    this.fireBulletToPosition(to.position, speed, timeout)\n  }\n\n  fireBulletToPosition(position, speed = 3.5, timeout = 1000) {\n    if(isNaN(position.x) || isNaN(position.y)) {\n      throw new Error('position coordinates missing')\n    }\n\n    let dx = position.x - this.body.position.x;\n    let dy = position.y - this.body.position.y;\n    let distance = Math.sqrt(dx ** 2 + dy ** 2)\n\n    let bulletRadius = 5;\n    let margin = (this.radius || this.width) + bulletRadius + 20;\n\n    let _from = { \n      x: this.body.position.x + margin * (dx / distance),\n      y: this.body.position.y + margin * (dy / distance)\n    }\n\n    // console.log('fireBulletToBody', 'to', position, 'speed', speed, 'from', _from)\n\n    let bullet = Bodies.circle(_from.x, _from.y, bulletRadius, { label: 'bullet-enemy' })\n\n    bullet.frictionAir = 0;\n    Body.setVelocity(bullet, { x: dx / distance * speed, y: dy / distance * speed });\n    World.add(this.engine.world, [bullet]);\n    setTimeout(() => Composite.remove(this.engine.world, bullet), timeout)\n  }\n\n  fireBulletToDirection(direction, speed = 3.5, timeout = 1000) {\n    if(isNaN(direction.x) || isNaN(direction.y)) {\n      throw new Error('position coordinates missing')\n    }\n\n    let bulletRadius = 3;\n    let margin = (this.radius || this.width) + bulletRadius + 20;\n\n    let _from = { \n      x: this.body.position.x + (margin * direction.x),\n      y: this.body.position.y + (margin * direction.y)\n    }\n\n    // console.log('fireBulletToDirection', 'to', direction, 'speed', speed, 'from', _from)\n\n    let bullet = Bodies.circle(_from.x, _from.y, bulletRadius, {\n      label: 'bullet-enemy',\n      static: true\n    });\n    bullet.frictionAir = 0;\n\n    World.add(this.engine.world, [bullet]);\n    Body.setVelocity(bullet, { x: direction.x * speed, y: direction.y * speed });\n    setTimeout(() => Composite.remove(this.engine.world, bullet), timeout)\n  }\n\n  fireBulletRectangle() {\n    this.fireBulletToDirection({ x: -1, y: 0 }, 5)\n    this.fireBulletToDirection({ x: 1, y: 0 }, 5)\n    this.fireBulletToDirection({ x: 0, y: -1 }, 5)\n    this.fireBulletToDirection({ x: 0, y: 1 }, 5)\n  }\n\n  fireBulletStar() {\n    this.fireBulletToDirection({ x: -1, y: 0 }, 5)\n    this.fireBulletToDirection({ x: 1, y: 0 }, 5)\n    this.fireBulletToDirection({ x: 0, y: -1 }, 5)\n    this.fireBulletToDirection({ x: 0, y: 1 }, 5)\n  }\n\n  moveToBody(player, speed = 1) {\n    let dx = player.position.x - this.body.position.x;\n    let dy = player.position.y - this.body.position.y;\n    let distance = Math.sqrt(dx ** 2 + dy ** 2)\n\n    Body.setVelocity(this.body, { x: dx / distance * speed, y: dy / distance * speed })\n  }\n\n  moveToDirection(direction, speed = 1) {\n    Body.setVelocity(this.body, { x: direction.x, y: direction.y })\n  }\n\n  update(players) {\n    this.counter += 1;\n  }\n\n  die() {\n    this.dead = true;\n    Composite.remove(this.engine.world, this.body)\n  }\n\n  addToWorld() {\n    World.add(this.engine.world, [this.body]);    \n  }\n}\n","export function random(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function range(num) {\n  let arr = []\n  for (var i = 0; i < num; i++) {\n    arr.push(0)\n  }\n  return arr;\n}\n","import { \n  Bodies,\n} from 'matter-js';\n\nimport Enemy from './Enemy'\n\nimport { \n  COLOR_ENEMY_SHOOTER,\n} from '../colors'\n\nimport { random } from '../helpers'\n\nexport default class EnemyShooter extends Enemy {\n  constructor({ engine }, { x, y }) {\n    super(...arguments);\n\n    this.state = {};\n    this.engine = engine;\n\n    this.radius = 15;\n\n    this.body = Bodies.circle(x, y, this.radius, { \n      label: 'enemy',\n      lifes: 5,\n      render: {\n        fillStyle: COLOR_ENEMY_SHOOTER\n      }\n    });\n\n    this.lastMove = +new Date();\n    this.lastShot = +new Date();\n  }\n\n  update(players) {\n    let focusPlayer = players[random(0, players.length - 1)];\n    let timestamp = +new Date();\n\n    if(!focusPlayer) return;\n\n    if(timestamp - this.lastShot > 2000) {\n      this.lastShot = +new Date();\n      this.fireBulletToBody(focusPlayer.body)\n    }\n\n    if(timestamp - this.lastMove > 5000) {\n      this.lastMove = +new Date();\n      if(Math.random() < 0.3) {\n        this.moveToBody(focusPlayer.body);\n      } else {\n        this.moveToDirection({ x: Math.random(), y: Math.random() });\n      }\n    }\n  }\n}\n","import { \n  Bodies,\n} from 'matter-js';\n\nimport Enemy from './Enemy'\n\nimport { \n  COLOR_ENEMY_STATION,\n} from '../colors'\n\nimport { random } from '../helpers'\n\nexport default class EnemyStation extends Enemy {\n  constructor({ engine }, { x, y }) {\n    super(...arguments);\n\n    this.state = {};\n    this.engine = engine;\n\n    this.radius = 10;\n\n    this.body = Bodies.circle(x, y, this.radius, { \n      label: 'enemy',\n      lifes: 1,\n      isStatic: true,\n      render: {\n        fillStyle: COLOR_ENEMY_STATION\n      }\n    });\n\n    this.lastShot1 = +new Date();\n    this.lastShot2 = +new Date();\n  }\n\n  update(players) {\n    let timestamp = +new Date();\n\n    if(timestamp - this.lastShot1 > 500) {\n      this.lastShot1 = +new Date();\n      this.fireBulletStar()\n    }\n\n    if(timestamp - this.lastShot2 > 1000) {\n      this.lastShot2 = +new Date();\n      this.fireBulletToDirection({ x: random(-1,1), y: 1 }, 2)\n      this.fireBulletToDirection({ x: random(-1,1), y: -1 }, 2)\n    }\n  }\n}\n","import { \n  Bodies,\n  Body,\n} from 'matter-js';\n\nimport Enemy from './Enemy'\n\nimport { \n  COLOR_ENEMY_DUBBER,\n} from '../colors'\n\nimport { random } from '../helpers'\n\nexport default class EnemyShooter extends Enemy {\n  constructor({ engine, render }, { x, y }) {\n    super(...arguments);\n\n    this.width = 40;\n    this.height = 40;\n\n    this.body = Bodies.rectangle(x, y, this.width, this.height, { \n      label: 'enemy',\n      lifes: 20,\n      render: {\n        fillStyle: COLOR_ENEMY_DUBBER\n      }\n    });\n\n    let randoms = [random(0, 5), random(0, 5), random(0, 5)]\n\n    this.directionIndex = 0;\n    this.directionPathsIndex = 0;\n    this.directionPaths = [\n      [\n        { x: 0, y: 2 },\n        { x: 0, y: 2 },\n        { x: 0, y: 2 },\n        { x: -2, y: 0 },\n        { x: -2, y: 0 },\n        { x: -2, y: 0 },\n        { x: -2, y: 0 },\n      ],\n      [\n        { x: randoms[0], y: -randoms[0] },\n        { x: randoms[1], y: -randoms[1] },\n        { x: randoms[2], y: -randoms[2] },\n        { x: randoms[0], y: -randoms[0] },\n      ]\n    ];\n    this.directions = \n\n    this.lastShot1 = +new Date();\n    this.lastShot2 = +new Date();\n  }\n\n  update(players) {\n    super.update();\n\n    let focusPlayer = players[random(0, players.length - 1)];\n    let timestamp = +new Date();\n\n    // movement\n    if (this.counter >= 60 * 1) {\n      this.counter = 0;\n      Body.setAngularVelocity(this.body, 0.02)\n\n      let directions = this.directionPaths[this.directionPathsIndex];\n      let direction = directions[this.directionIndex];\n      Body.setVelocity(this.body, direction)\n\n      this.directionIndex += 1;\n      if(this.directionIndex > directions.length - 1) {\n        this.directionIndex = 0;\n        this.directionPathsIndex += 1;\n        if(this.directionPathsIndex > this.directionPaths.length - 1) {\n          this.directionPathsIndex = 0;\n        }\n      }\n    }\n\n    if(!focusPlayer) return;\n\n    if(timestamp - this.lastShot2 > 500) {\n      this.lastShot2 = +new Date();\n      this.fireBulletToBody(focusPlayer.body, 3.5, 2000)\n    }\n\n    let intervalLShot1 = this.body.lifes * 1000 / 3;\n\n    if(timestamp - this.lastShot1 > intervalLShot1) {\n      Body.setAngularVelocity(this.body, 0.05)\n      this.lastShot1 = +new Date();\n      this.fireBulletStar()\n      this.fireBulletRectangle()\n\n      if(this.body.lifes < 3) {\n        this.moveToBody(focusPlayer.body);\n      }\n\n      Body.scale(this.body, 2, 2)\n      setTimeout(() => Body.scale(this.body, 0.5, 0.5), 200);\n    }\n  }\n\n  die() {\n    super.die()\n\n    for (var i = 0; i < 100; i++) {\n      this.fireBulletToDirection({ x: Math.random(), y: Math.random() }, 3, 4000)\n    }\n    this.engine.timing.timeScale = 0.1;\n    setTimeout(() => this.engine.timing.timeScale = 1, 10000)\n  }\n}\n","import { \n  World,\n  Bodies,\n  Vertices,\n  Svg\n} from 'matter-js';\n\nimport { \n  COLOR_ITEM_LIFE,\n  COLOR_ITEM_FATPILL,\n  COLOR_ITEM_BIGSHOT,\n} from '../colors'\n\nexport default class Item {\n  constructor({ engine }, { x, y, type }) {\n  \n    this.state = {};\n    this.engine = engine;\n\n    let settings = {\n      life: { color: COLOR_ITEM_LIFE },\n      fatpill: { color: COLOR_ITEM_FATPILL },\n      bigshot: { color: COLOR_ITEM_BIGSHOT }\n    }[type]\n\n    this.width = 15;\n    this.height = 15;\n\n    this.body = Bodies.rectangle(x, y, this.width, this.height, { \n      label: 'item', \n      itemType: type,\n      render: { fillStyle: settings.color },\n      chamfer: { radius: 3 }\n    });\n  }\n\n  update() {\n  }\n\n  addToWorld() {\n    World.add(this.engine.world, [this.body]);\n  }\n}\n","import { \n  World,\n  Bodies,\n} from 'matter-js';\n\nimport { \n  COLOR_DOORS,\n  COLOR_DOORS_UNLOCKED,\n} from '../colors'\n\nexport default class Door {\n  constructor({ engine, render }, { type, targetRoom }) {\n  \n    this.state = {};\n    this.engine = engine;\n\n    let { x, y, width, height } = {\n      right: {x: render.options.width, y: render.options.height / 2, width: 50, height: 100 },\n      left: {x: 0, y: render.options.height / 2, width: 50, height: 100 },\n      top: { x: render.options.width / 2, y: 0, width: 100, height: 50 },\n      bottom: { x: render.options.width / 2, y: render.options.height, width: 100, height: 50 }\n    }[type];\n\n    this.body = Bodies.rectangle(x, y, width, height, { \n      isStatic: true, \n      label: 'door',\n      doorType: type,\n      targetRoom: targetRoom,\n      render: { fillStyle: COLOR_DOORS },\n      locked: true\n    });\n  }\n\n  unlock() {\n    this.body.render.fillStyle = COLOR_DOORS_UNLOCKED;\n    this.body.locked = false;\n  }\n\n  update() {\n  }\n\n  addToWorld() {\n    // console.log(this.body)\n    World.add(this.engine.world, [this.body]);\n  }\n}\n","import EnemyShooter from './components/EnemyShooter'\nimport EnemyStation from './components/EnemyStation'\nimport EnemyDubber from './components/EnemyDubber'\nimport Item from './components/Item'\nimport Door from './components/Door'\n\nimport { random } from './helpers'\nimport heart from './svgs/heart.svg';\nimport pill from './svgs/pill.svg';\n\n// import { safeLoad } from 'js-yaml';\n// import { readFileSync } from 'fs';\n \nexport async function generateRooms ({ engine, render, width, height }) {\n\n  return {\n    0: {\n      enemies: [\n      ],\n      items: [\n        new Item({ engine, render }, { type: 'fatpill', x: random(100, width - 100), y: random(100, height - 100)}),\n        new Item({ engine, render }, { type: 'life', x: random(100, width - 100), y: random(100, height - 100)}),\n      ],\n      doors: [\n        new Door({ engine, render }, { targetRoom: 1, type: 'left' }),\n      ]\n    },\n    1: {\n      enemies: [\n        new EnemyStation({ engine, render }, {x: width - 100, y: 100}),\n        new EnemyStation({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n        new EnemyStation({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n      ],\n      items: [\n      ],\n      doors: [\n        new Door({ engine, render }, { targetRoom: 0, type: 'right' }),\n        new Door({ engine, render }, { targetRoom: 2, type: 'bottom' }),\n        new Door({ engine, render }, { targetRoom: 3, type: 'left' }),\n      ]\n    },\n    2: {\n      enemies: [\n        new EnemyDubber({ engine, render }, { x: width - 100, y: height - 100 }),\n        new EnemyShooter({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n      ],\n      items: [\n        new Item({ engine, render }, { type: 'fatpill', x: random(100, width - 100), y: random(100, height - 100)}),\n        new Item({ engine, render }, { type: 'life', x: random(100, width - 100), y: random(100, height - 100)}),\n        new Item({ engine, render }, { type: 'life', x: random(100, width - 100), y: random(100, height - 100)}),\n      ],\n      doors: [\n        new Door({ engine, render }, { targetRoom: 1, type: 'top' }),\n      ]\n    },\n    3: {\n      enemies: [\n        new EnemyStation({ engine, render }, {x: 100, y: 100}),\n        new EnemyShooter({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n        new EnemyShooter({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n        new EnemyShooter({ engine, render }, { x: random(100, width - 100), y: random(100, height - 100)}),\n        new EnemyStation({ engine, render }, {x: width - 100, y: height - 100}),\n      ],\n      items: [\n        new Item({ engine, render }, { type: 'bigshot', x: random(100, width - 100), y: random(100, height - 100)}),\n        new Item({ engine, render }, { type: 'life', x: random(100, width - 100), y: random(100, height - 100)}),\n      ],\n      doors: [\n        new Door({ engine, render }, { targetRoom: 1, type: 'right' }),\n      ]\n    },\n  }\n};","import React, { Component } from 'react';\nimport { \n  Engine,\n  Render,\n  World,\n  Bodies,\n  Events,\n  Composite,\n  Body\n} from 'matter-js';\n\nimport Player from './components/Player'\nimport gamepad from './services/gamepad'\nimport { generateRooms } from './roomGenerator'\n\nimport { range } from './helpers'\nimport { COLOR_BG, COLOR_WALLS } from './colors'\n\nimport { Howl } from 'howler';\nvar sound_drink_1 = new Howl({ src: ['./sounds/bubble.wav'] });\nvar sound_drink_2 = new Howl({ src: ['./sounds/bottle.wav'] });\nvar sound_door = new Howl({ src: ['./sounds/door.wav'] });\nvar sound_bg = new Howl({ src: ['./sounds/bg.mp3'], loop: true });\nvar sound_start = new Howl({ src: ['./sounds/selection.wav'] });\nvar sound_dead = new Howl({ src: ['./sounds/pain.wav'] });\nvar sound_kill = new Howl({ src: ['./sounds/pain.wav'] });\nvar sound_victory_1 = new Howl({ src: ['./sounds/victory.mp3'] });\nvar sound_victory_2 = new Howl({ src: ['./sounds/vic.mp3'] });\nvar sound_hit = new Howl({ src: ['./sounds/hit.mp3'] });\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.width = 800;\n    this.height = 600;\n\n    this.state = {\n      lifes: null,\n      gameover: true\n    };\n\n    this.players = []\n    this.rooms = null;\n\n    this.currentRoomId = 0;\n\n    this.renderElement = <div style={{ width: '100%', height: '100%' }}></div>;\n  }\n\n  cleanRoom() {\n    World.clear(this.engine.world)\n  }\n\n  setupRoom(opts) {\n\n    World.add(this.engine.world, [\n        Bodies.rectangle(400, 0, 800, 50, { isStatic: true, label: 'wall', render: { fillStyle: COLOR_WALLS }  }),\n        Bodies.rectangle(400, 600, 800, 50, { isStatic: true, label: 'wall', render: { fillStyle: COLOR_WALLS }  }),\n        Bodies.rectangle(800, 300, 50, 600, { isStatic: true, label: 'wall', render: { fillStyle: COLOR_WALLS }  }),\n        Bodies.rectangle(0, 300, 50, 600, { isStatic: true, label: 'wall', render: { fillStyle: COLOR_WALLS }  })\n    ]);\n\n    this.currentRoomId = opts.id;\n    let room = this.rooms[this.currentRoomId];\n\n    this.players.forEach(c => {\n      c.addToWorld()\n      Body.setPosition(c.body, { x: opts.playerPosition.x, y: opts.playerPosition.y })\n    })\n    room.doors.forEach(c => c.addToWorld())\n    room.items.forEach(c => c.addToWorld())\n    room.enemies.forEach(c => c.addToWorld())\n\n    if(room.enemies.length === 0) {\n      room.doors.forEach(d => d.unlock())\n    }\n  }\n\n  update() {\n\n    let gp = gamepad.getState();\n    this.setState({ gamepadConnected: gp.connected })\n\n    if(!gp.connected) return;\n\n    this.setState({ gamepadStr: JSON.stringify(gp, null, 2), })\n\n    if(this.state.gameover && gp.buttons[8].pressed) {\n      this.players = [];\n      this.setState({ fatpill: false })\n      this.start()\n    }\n\n    if(this.rooms === null || this.state.loading) return;\n\n    let room = this.rooms[this.currentRoomId];\n\n    room.enemies.forEach(c => c.update(this.players));\n    this.players.forEach(c => c.update());\n\n    if(this.state.gameover) return;\n\n    let gamepadPlayer = this.players[0];\n\n    if(gp.buttons[9].pressed) {\n    }\n\n    if(gp.buttons[7].pressed) {\n      gamepadPlayer.activateEffect({ id: 'ultimate' })\n      this.setState({ lastUlti: +new Date() })\n    }\n\n    if(Math.abs(gp.axes[3]) > 0.95 || Math.abs(gp.axes[4]) > 0.95) {\n      gamepadPlayer.fire({ x: gp.axes[3], y: gp.axes[4] })\n    }\n\n    gamepadPlayer.moveToDirection({ x: gp.axes[0], y: gp.axes[1] })\n  }\n\n  setupCollisions() {\n    Events.on(this.engine, 'collisionStart', (event) => {\n      let room = this.rooms[this.currentRoomId];\n\n      event.pairs.forEach(pair => {\n        let a = pair.bodyA;\n        let b = pair.bodyB;\n\n        if(a.label === 'enemy' && b.label === 'bullet-player') {\n          sound_hit.play()\n          a.lifes -= 1;\n          Composite.remove(this.engine.world, b)\n\n          if(a.lifes <= 0) {\n            sound_victory_2.play();\n            for (let i = 0; i < room.enemies.length; i++) {\n              if(room.enemies[i].body.id === a.id) {\n                room.enemies[i].die();\n                room.enemies.splice(i, 1);\n                break;\n              }\n            }\n          }\n\n          if(room.enemies.length === 0) {\n            sound_victory_1.play();\n            room.doors.map(d => d.unlock())\n          }\n        }\n\n        if(a.label === 'player' && b.label === 'bullet-enemy') {\n          sound_hit.play()\n          Composite.remove(this.engine.world, b)\n\n          a.lifes -= 1;\n          this.setState({ lifes: a.lifes })\n\n          if(a.lifes <= 0) {\n            sound_dead.play();\n            Composite.remove(this.engine.world, a)\n            this.players = [];\n            this.setState({ gameover: true })\n          }\n        }\n\n        if(a.label === 'wall' && ['bullet-player', 'bullet-enemy'].includes(b.label)) {\n          Composite.remove(this.engine.world, b)\n        }\n\n        if(\n          (a.label === 'player' && b.label === 'door') ||\n          (a.label === 'door' && b.label === 'player')\n        ) {\n          let door = a.label === 'player' ? b : a;\n\n          if(!door.locked) {\n            sound_door.play()\n            this.cleanRoom()\n            this.setupRoom({ id: door.targetRoom, playerPosition: {\n              left: { x: this.width - 100, y: this.height / 2, },\n              right: { x: 100, y: this.height / 2, },\n              top: { x: this.width / 2, y: this.height - 100, },\n              bottom: { x: this.width / 2, y: 100, },\n            }[door.doorType] })\n          }\n        }\n\n        if(\n          (a.label === 'item' && b.label === 'player') ||\n          (a.label === 'player' && b.label === 'item')\n        ) {\n          let item = a.label === 'item' ? a : b;\n          let player = a.label === 'player' ? a : b;\n\n          Composite.remove(this.engine.world, item)\n\n          if(item.itemType === 'fatpill') {\n            sound_drink_2.play();\n            this.players[0].activateEffect({ id: 'fatpill' })\n            player.lifes = 1;\n            this.setState({ fatpill: true, lifes: player.lifes })\n          }\n\n          if(item.itemType === 'life') {\n            sound_drink_1.play();\n            this.setState({ lifes: this.state.lifes + 1 })\n            player.lifes += 1;\n          }\n\n          if(item.itemType === 'bigshot') {\n            this.players[0].activateEffect({ id: 'bigshot' })\n          }\n\n          for (let i = 0; i < room.items.length; i++) {\n            if(\n              room.items[i].body.id === item.id ||\n              room.items[i].body.id === item.parent.id\n             ) {\n              room.items.splice(i, 1);\n              break;\n            }\n          }\n        }\n\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.engine = Engine.create()\n    this.engine.world.gravity.y = 0;\n    Engine.run(this.engine);\n\n    this.renderer = Render.create({\n      element: this.renderElement,\n      engine: this.engine,\n      options: {\n        width: this.width,\n        height: this.height,\n        wireframes: false,\n        background: COLOR_BG,\n        // pixelRatio: 1,\n        // wireframeBackground: '#222',\n        // hasBounds: true,\n        // enabled: true,\n        // showSleeping: true,\n        // showDebug: true,\n        // showBroadphase: true,\n        // showBounds: true,\n        // showVelocity: true,\n        // showCollisions: true,\n        // showSeparations: true,\n        // showAxes: true,\n        // showAngleIndicator: true,\n        // showIds: true,\n        // showShadows: true,\n        // showVertexNumbers: true,\n        // showConvexHulls: true,\n        // showInternalEdges: true,\n        // showPositions: true,\n        // showMousePosition: true\n      }\n    });\n\n    Render.run(this.renderer);\n\n    (function run() {\n        this.update(this.engine);\n        window.requestAnimationFrame(run.bind(this));\n        Engine.update(this.engine, 1000 / 60);\n    }.bind(this))();\n\n    // this.start();\n  }\n\n  async start() {\n    sound_start.play()\n    sound_bg.stop()\n    sound_bg.play()\n\n    let player = new Player({\n      engine: this.engine,\n      render: this.render\n    }, { \n      x: this.width / 2, \n      y: this.height / 2 \n    })\n    this.players.push(player);\n\n    Engine.clear(this.engine);\n\n    this.setState({ \n      loading: true,\n      lastUlti: +new Date(),\n      lifes: player.body.lifes,\n      gameover: false,\n    })\n\n    this.rooms = await generateRooms({\n      engine: this.engine,\n      render: this.renderer,\n      width: this.width,\n      height: this.height\n    });\n\n    this.setupCollisions();\n\n    this.cleanRoom()\n    this.setupRoom({\n      id: 0, \n      playerPosition: { x: this.width / 2, y: this.height / 2 } \n    })\n\n    this.setState({ loading: false })\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ position: 'absolute' }}>\n          { this.state.gamepadConnected && !this.state.loading && !this.state.gameover &&\n            <div>\n              {range(this.state.lifes).map(l => this.state.fatpill ? '💜' : '❤️' )} \n              {+new Date() - this.state.lastUlti >= 10000 && '💊'}\n              {+new Date() - this.state.lastUlti < 10000 && 10 - Math.round((+new Date() - this.state.lastUlti) / 1000)}\n            </div>\n          }\n          {!this.state.gamepadConnected && <code>Please connect gamepad</code>}\n          {this.state.gamepadConnected && this.state.loading && <code>Loading…</code>}\n          {this.state.gamepadConnected && this.state.gameover && !this.state.loading && <code>Press the 'start' button</code>}\n        </div>\n        {/*<pre>{this.state.gamepadStr}</pre>*/}\n        <div style={{ width: '100%', height: '100%', textAlign: 'center' }} ref={node => this.renderElement = node}></div>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React, { Component } from 'react';\nimport './App.css';\nimport Game from './Game';\n\nclass App extends Component {\n  render() {\n    return (\n      <Game />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}